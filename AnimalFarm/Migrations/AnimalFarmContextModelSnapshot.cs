// <auto-generated />
using System;
using AnimalFarm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalFarm.Migrations
{
    [DbContext(typeof(AnimalFarmContext))]
    partial class AnimalFarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AnimalFarm.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnimalName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AnimalType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("AnimalFarm.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TrainerName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TrainerSpecialty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TrainerId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AnimalFarm.Models.TrainerAnimal", b =>
                {
                    b.Property<int>("TrainerAnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("TrainerAnimalId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerAnimal");
                });

            modelBuilder.Entity("AnimalFarm.Models.TrainerAnimal", b =>
                {
                    b.HasOne("AnimalFarm.Models.Animal", "Animal")
                        .WithMany("JoinEntities")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimalFarm.Models.Trainer", "Trainer")
                        .WithMany("JoinEntities")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("AnimalFarm.Models.Animal", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("AnimalFarm.Models.Trainer", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
